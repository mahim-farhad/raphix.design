$utilities: (
  "position": (property: position,
    responsive: true,
    values: static relative absolute fixed sticky,
  ),
  "top": (property: top,
    values: $position-values,
  ),
  "right": (property: right,
    class: right,
    values: $position-values,
  ),
  "bottom": (property: bottom,
    values: $position-values,
  ),
  "left": (property: left,
    class: left,
    values: $position-values,
  ),
  "transform": (responsive: true,
    property: transform,
    class: transform-scale,
    values: (5: scale(0.5),
      6: scale(0.6),
      7: scale(0.7),
      8: scale(0.8),
      9: scale(0.9),
      10: scale(1),
    ),
  ),
  "vertical-align": (property: vertical-align,
    class: align,
    values: baseline top middle bottom text-bottom text-top,
  ),
  "float": (property: float,
    class: float,
    values: left right none,
  ),
  "overflow": (property: overflow,
    values: auto hidden visible scroll,
  ),
  "overflow-y": (property: overflow-y,
    class: overflow-y,
    values: auto hidden visible scroll,
  ),
  "overflow-x": (property: overflow-x,
    class: overflow-x,
    values: auto hidden visible scroll,
  ),
  "display": (property: display,
    class: d,
    responsive: true,
    values: inline inline-block block grid table table-row table-cell flex inline-flex none,
  ),
  "border": (property: border,
    class: border,
    responsive: true,
    values: (null: $border-width-1 solid $border-color),
  ),
  "border-top": (property: border-top,
    class: border-top,
    responsive: true,
    values: (null: $border-width-1 solid $border-color,
      0: 0,
    ),
  ),
  "border-right": (property: border-right,
    class: border-right,
    responsive: true,
    values: (null: $border-width-1 solid $border-color,
      0: 0,
    ),
  ),
  "border-bottom": (property: border-bottom,
    class: border-bottom,
    responsive: true,
    values: (null: $border-width-1 solid $border-color,
      0: 0,
    ),
  ),
  "border-left": (property: border-left,
    class: border-left,
    responsive: true,
    values: (null: $border-width-1 solid $border-color,
      0: 0,
    ),
  ),
  "border-width": (property: border-width,
    class: border-width,
    values: $border-widths,
  ),
  "border-color": (property: border-color,
    class: border-color,
    values: map-merge($grays, $colors),
  ),
  "border-style": (property: border-style,
    class: border-style,
    values: solid dashed,
  ),
  "rounded": (property: border-radius,
    class: rounded,
    responsive: true,
    values: $border-radius,
  ),
  "rounded-top": (property: border-top-left-radius border-top-right-radius,
    class: rounded-top,
    values: $border-radius,
  ),
  // "rounded-right": (property: border-top-right-radius border-bottom-right-radius,
  //   class: rounded-right,
  //   values: $border-radius-md,
  // ),
  // "rounded-bottom": (property: border-bottom-right-radius border-bottom-left-radius,
  //   class: rounded-bottom,
  //   values: $border-radius-md,
  // ),
  // "rounded-left": (property: border-bottom-left-radius border-top-left-radius,
  //   class: rounded-left,
  //   values: $border-radius-md,
  // ),
  // "shadow": (
  //   property: box-shadow,
  //   class: shadow,
  //   values: (
  //     null: $box-shadow-base,
  //     sm: $box-shadow-sm,
  //     lg: $box-shadow-lg,
  //     xl: $box-shadow-xl,
  //     none: none,
  //   ),
  // ),
  // Sizing utilities
  "width": (property: width,
    responsive: true,
    class: w,
    values: (0: 0%,
      25: 25%,
      50: 50%,
      75: 75%,
      100: 100%,
      0px: 0px,
      25px: 25px,
      50px: 50px,
      75px: 75px,
      100px: 100px,
      150px: 150px,
      200px: 200px,
      250px: 250px,
      300px: 300px,
      400px: 400px,
      500px: 500px,
      auto: auto,
    ),
  ),
  "max-width": (property: max-width,
    class: mw,
    values: (100: 100%,
    ),
  ),
  "viewport-width": (property: width,
    class: vw,
    values: (100: 100vw,
    ),
  ),
  "min-viewport-width": (property: min-width,
    class: min-vw,
    values: (100: 100vw,
    ),
  ),
  "height": (property: height,
    responsive: true,
    class: h,
    values: (0: 0%,
      25: 25%,
      50: 50%,
      75: 75%,
      100: 100%,
      0px: 0px,
      25px: 25px,
      50px: 50px,
      75px: 75px,
      100px: 100px,
      150px: 150px,
      200px: 200px,
      250px: 250px,
      300px: 300px,
      400px: 400px,
      500px: 500px,
      auto: auto,
    ),
  ),
  "max-height": (property: max-height,
    class: mh,
    values: (100: 100%,
    ),
  ),
  "viewport-height": (property: height,
    class: vh,
    values: (100: 100vh,
    ),
  ),
  // "min-viewport-height": (
  //   property: min-height,
  //   class: min-vh,
  //   values: (
  //     25: $section-height-25-min-height,
  //     35: $section-height-35-min-height,
  //     45: $section-height-45-min-height,
  //     50: $section-height-50-min-height,
  //     55: $section-height-55-min-height,
  //     65: $section-height-65-min-height,
  //     70: $section-height-70-min-height,
  //     75: $section-height-75-min-height,
  //     80: $section-height-80-min-height,
  //     85: $section-height-85-min-height,
  //     90: $section-height-90-min-height,
  //     95: $section-height-95-min-height,
  //     100: 100vh,
  //   ),
  // ),
  // Flex utilities
  "flex": (responsive: true,
    property: flex,
    values: (fill: 1 1 auto, ),
  ),
  "flex-direction": (responsive: true,
    property: flex-direction,
    class: flex-direction,
    values: row column row-reverse column-reverse,
  ),
  "flex-grow": (responsive: true,
    property: flex-grow,
    class: flex-grow,
    values: (0: 0,
      1: 1,
    ),
  ),
  "flex-shrink": (responsive: true,
    property: flex-shrink,
    class: flex,
    values: (shrink-0: 0,
      shrink-1: 1,
    ),
  ),
  "flex-wrap": (responsive: true,
    property: flex-wrap,
    class: flex,
    values: wrap nowrap wrap-reverse,
  ),
  "gap": (responsive: true,
    property: gap,
    class: gap,
    values: $spacers,
  ),
  "row-gap": (property: row-gap,
    class: row-gap,
    values: $spacers,
  ),
  "justify-content": (responsive: true,
    property: justify-content,
    values: (start: flex-start,
      end: flex-end,
      center: center,
      between: space-between,
      around: space-around,
      evenly: space-evenly,
    ),
  ),
  "align-items": (responsive: true,
    property: align-items,
    values: (start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch,
    ),
  ),
  "align-content": (responsive: true,
    property: align-content,
    values: (start: flex-start,
      end: flex-end,
      center: center,
      between: space-between,
      around: space-around,
      stretch: stretch,
    ),
  ),
  "align-self": (responsive: true,
    property: align-self,
    values: (auto: auto,
      start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch,
    ),
  ),
  "order": (responsive: true,
    property: order,
    values: (first: -1,
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      last: 6,
    ),
  ),
  "margin": (responsive: true,
    property: margin,
    class: m,
    values: $spacers,
  ),
  "margin-y": (responsive: true,
    property: margin-top margin-bottom,
    class: my,
    values: $spacers,
  ),
  "margin-x": (responsive: true,
    property: margin-right margin-left,
    class: mx,
    values: $spacers,
  ),
  "margin-top": (responsive: true,
    property: margin-top,
    class: mt,
    values: $spacers,
  ),
  "margin-right": (responsive: true,
    property: margin-right,
    class: mr,
    values: $spacers,
  ),
  "margin-bottom": (responsive: true,
    property: margin-bottom,
    class: mb,
    values: $spacers,
  ),
  "margin-left": (responsive: true,
    property: margin-left,
    class: ml,
    values: $spacers,
  ),
  "negative-margin": (responsive: true,
    property: margin,
    class: m,
    values: $negative-spacers,
  ),
  "negative-margin-y": (responsive: true,
    property: margin-top margin-bottom,
    class: my,
    values: $negative-spacers,
  ),
  "negative-margin-x": (responsive: true,
    property: margin-right margin-left,
    class: mx,
    values: $negative-spacers,
  ),
  "negative-margin-top": (responsive: true,
    property: margin-top,
    class: mt,
    values: $negative-spacers,
  ),
  "negative-margin-right": (responsive: true,
    property: margin-right,
    class: mr,
    values: $negative-spacers,
  ),
  "negative-margin-bottom": (responsive: true,
    property: margin-bottom,
    class: mb,
    values: $negative-spacers,
  ),
  "negative-margin-left": (responsive: true,
    property: margin-left,
    class: ml,
    values: $negative-spacers,
  ),
  "padding": (responsive: true,
    property: padding,
    class: p,
    values: $spacers,
  ),
  "padding-y": (responsive: true,
    property: padding-top padding-bottom,
    class: py,
    values: $spacers,
  ),
  "padding-x": (responsive: true,
    property: padding-right padding-left,
    class: px,
    values: $spacers,
  ),
  "padding-top": (responsive: true,
    property: padding-top,
    class: pt,
    values: $spacers,
  ),
  "padding-right": (responsive: true,
    property: padding-right,
    class: pr,
    values: $spacers,
  ),
  "padding-bottom": (responsive: true,
    property: padding-bottom,
    class: pb,
    values: $spacers,
  ),
  "padding-left": (responsive: true,
    property: padding-left,
    class: pl,
    values: $spacers,
  ),
  "font-family": (property: font-family,
    class: font-family,
    values: $font-family,
  ),
  "font-size": (rfs: true,
    responsive:true,
    property: font-size,
    class: fs,
    values: $font-sizes,
  ),
  "font-style": (property: font-style,
    class: font-style,
    values: italic normal,
  ),
  "font-weight": (property: font-weight,
    class: fw,
    values: $font-weights,
  ),
  "line-height": (property: line-height,
    class: line-height,
    values: 1,
  ),
  "text-align": (responsive: true,
    property: text-align,
    class: text,
    values: left right center,
  ),
  "text-decoration": (property: text-decoration,
    class: text,
    values: none underline line-through,
  ),
  "text-transform": (property: text-transform,
    class: text,
    values: lowercase uppercase capitalize,
  ),
  "white-space": (property: white-space,
    class: text,
    values: normal nowrap pre-wrap,
  ),
  "word-wrap": (property: word-wrap word-break,
    class: text,
    values: break-word,
    rtl: false,
  ),
  "color": (property: color,
    class: color,
    values: map-merge(map-merge(map-merge($colors, $theme-colors), $state-colors), $social-media-colors),
  ),
  "background-color": (property: background-color,
    class: bg,
    values: map-merge(map-merge(map-merge($colors, $theme-colors), $layout-colors), $social-media-colors),
  ),
  "gradient": (property: background-image,
    class: bg-gradient,
    values: $gradient-colors,
  ),
  "visibility": (property: visibility,
    class: visibility,
    values: visible hidden,
  ),
  "opacity": (property: opacity,
    class: opacity,
    values: (0: 0,
      1: 0.1,
      2: 0.2,
      3: 0.3,
      4: 0.4,
      5: 0.5,
      6: 0.6,
      7: 0.7,
      8: 0.8,
      9: 0.9,
      10: 1,
    ),
  ),
  // "letter-spacing": (
  //   property: letter-spacing,
  //   values: (
  //     1: 1px,
  //     2: 2px,
  //     3: 3px,
  //     4: 4px,
  //     5: 5px,
  //   ),
  // ),
  // "border-top-left-radius": (
  //   property: border-top-left-radius,
  //   class: border-radius-top-start,
  //   responsive: true,
  //   values: (
  //     null: $border-radius-base,
  //     0: 0,
  //     sm: $border-radius-sm,
  //     md: $border-radius-base,
  //     lg: $border-radius-lg,
  //     xl: $border-radius-xl,
  //     2xl: $border-radius-2xl,
  //     circle: 50%,
  //     pill: $border-radius-pill,
  //   ),
  // ),
  // "border-top-right-radius": (
  //   property: border-top-right-radius,
  //   class: border-radius-top-end,
  //   responsive: true,
  //   values: (
  //     null: $border-radius-base,
  //     0: 0,
  //     sm: $border-radius-sm,
  //     md: $border-radius-base,
  //     lg: $border-radius-lg,
  //     xl: $border-radius-xl,
  //     2xl: $border-radius-2xl,
  //     circle: 50%,
  //     pill: $border-radius-pill,
  //   ),
  // ),
  // "border-bottom-left-radius": (
  //   property: border-bottom-left-radius,
  //   class: border-radius-bottom-start,
  //   responsive: true,
  //   values: (
  //     null: $border-radius-base,
  //     0: 0,
  //     sm: $border-radius-sm,
  //     md: $border-radius-base,
  //     lg: $border-radius-lg,
  //     xl: $border-radius-xl,
  //     2xl: $border-radius-2xl,
  //     circle: 50%,
  //     pill: $border-radius-pill,
  //   ),
  // ),
  // "border-bottom-right-radius": (
  //   property: border-bottom-right-radius,
  //   class: border-radius-bottom-end,
  //   responsive: true,
  //   values: (
  //     null: $border-radius-base,
  //     0: 0,
  //     sm: $border-radius-sm,
  //     md: $border-radius-base,
  //     lg: $border-radius-lg,
  //     xl: $border-radius-xl,
  //     2xl: $border-radius-2xl,
  //     circle: 50%,
  //     pill: $border-radius-pill,
  //   ),
  // ),
  // "max-height-px": (
  //   property: max-height,
  //   class: max-height,
  //   values: (
  //     100: $max-height-100,
  //     150: $max-height-150,
  //     160: $max-height-160,
  //     200: $max-height-200,
  //     250: $max-height-250,
  //     300: $max-height-300,
  //     400: $max-height-400,
  //     500: $max-height-500,
  //     600: $max-height-600,
  //   ),
  // ),
  // "max-height-vh": (
  //   property: max-height,
  //   class: max-height-vh,
  //   values: (
  //     10: $max-height-vh-10,
  //     20: $max-height-vh-20,
  //     30: $max-height-vh-30,
  //     40: $max-height-vh-40,
  //     50: $max-height-vh-50,
  //     60: $max-height-vh-60,
  //     70: $max-height-vh-70,
  //     80: $max-height-vh-80,
  //     90: $max-height-vh-90,
  //     100: $max-height-vh-100,
  //   ),
  // ),
  // "min-height-px": (
  //   property: min-height,
  //   class: min-height,
  //   values: (
  //     100: $min-height-100,
  //     150: $min-height-150,
  //     160: $min-height-160,
  //     200: $min-height-200,
  //     250: $min-height-250,
  //     300: $min-height-300,
  //     400: $min-height-400,
  //     500: $min-height-500,
  //     600: $min-height-600,
  //   ),
  // ),
  // "height-px": (
  //   property: height,
  //   class: height,
  //   values: (
  //     100: $height-100,
  //     200: $height-200,
  //     300: $height-300,
  //     400: $height-400,
  //     500: $height-500,
  //     600: $height-600,
  //   ),
  // ),
  // "max-width-px": (
  //   property: max-width,
  //   class: max-width,
  //   values: (
  //     100: $max-width-100,
  //     200: $max-width-200,
  //     300: $max-width-300,
  //     400: $max-width-400,
  //     500: $max-width-500,
  //   ),
  // ),
);

$utilities: map-get-multiple($utilities, ("position",
      "top",
      "bottom",
      "start",
      "end",
      "transform",
      "vertical-align",

      "float",
      "display",

      "width",
      "height",

      "flex",
      "flex-direction",
      "flex-wrap",
      "flex-grow",
      "gap",
      "row-gap",
      "align-items",
      "justify-content",
      "order",

      "margin",
      "margin-y",
      "margin-x",
      "margin-top",
      "margin-right",
      "margin-bottom",
      "margin-left",
      "negative-margin-x",
      "negative-margin-y",
      "negative-margin-top",
      "negative-margin-right",
      "negative-margin-bottom",
      "negative-margin-left",

      "padding",
      "padding-x",
      "padding-y",
      "padding-top",
      "padding-right",
      "padding-bottom",
      "padding-left",

      "font-family",
      "font-size",
      "font-weight",

      "line-height",

      "text-align",
      "text-decoration",
      "text-transform",

      "color",
      "background-color",
      "gradient",
      "visibility",
      "opacity",
      "rounded",
      "rounded-top",
      "border",
      "border-width",
      "border-color",
      "border-style"
    ));

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $key,
    $utility in $utilities {
      @if type-of($utility)=="map" and (map-get($utility, responsive) or $infix =="") {
        @include generate-utility($utility, $infix);
      }
    }
  }
}